ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"bsp_f1xx_rtc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Is_Leap_Year,"ax",%progbits
  16              		.align	1
  17              		.global	Is_Leap_Year
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	Is_Leap_Year:
  24              	.LFB68:
  25              		.file 1 "drivers/bsp_f1xx_rtc.c"
   1:drivers/bsp_f1xx_rtc.c **** #include "bsp_f1xx_rtc.h"
   2:drivers/bsp_f1xx_rtc.c **** 
   3:drivers/bsp_f1xx_rtc.c **** _MTIME mTime = {
   4:drivers/bsp_f1xx_rtc.c **** 		.w_year = 2019,
   5:drivers/bsp_f1xx_rtc.c **** 		.w_month = 12,
   6:drivers/bsp_f1xx_rtc.c **** 		.w_date = 9,
   7:drivers/bsp_f1xx_rtc.c **** 		.hour = 14,
   8:drivers/bsp_f1xx_rtc.c **** 		.min = 35,
   9:drivers/bsp_f1xx_rtc.c **** 		.sec =50.
  10:drivers/bsp_f1xx_rtc.c **** };//时钟结构体
  11:drivers/bsp_f1xx_rtc.c **** 
  12:drivers/bsp_f1xx_rtc.c **** //实时时钟配置
  13:drivers/bsp_f1xx_rtc.c **** //初始化RTC时钟,同时检测时钟是否工作正常
  14:drivers/bsp_f1xx_rtc.c **** //BKP->DR1用于保存是否第一次配置的设置
  15:drivers/bsp_f1xx_rtc.c **** //返回0:正常
  16:drivers/bsp_f1xx_rtc.c **** //其他:错误代码
  17:drivers/bsp_f1xx_rtc.c **** u8 bsp_RTC_Init(void)
  18:drivers/bsp_f1xx_rtc.c **** {
  19:drivers/bsp_f1xx_rtc.c **** 	//检查是不是第一次配置时钟
  20:drivers/bsp_f1xx_rtc.c **** 	u32 temp = 0;
  21:drivers/bsp_f1xx_rtc.c **** 	if (BKP->DR1 != 0X5050)//第一次配置
  22:drivers/bsp_f1xx_rtc.c **** 	{
  23:drivers/bsp_f1xx_rtc.c **** 		RCC->APB1ENR |= 1 << 28;     //使能电源时钟
  24:drivers/bsp_f1xx_rtc.c **** 		RCC->APB1ENR |= 1 << 27;     //使能备份时钟
  25:drivers/bsp_f1xx_rtc.c **** 		PWR->CR |= 1 << 8;           //取消备份区写保护
  26:drivers/bsp_f1xx_rtc.c **** 		RCC->BDCR |= 1 << 16;        //备份区域软复位
  27:drivers/bsp_f1xx_rtc.c **** 		RCC->BDCR &= ~(1 << 16);     //备份区域软复位结束
  28:drivers/bsp_f1xx_rtc.c **** 		RCC->BDCR |= 1 << 0;         //开启外部低速振荡器
  29:drivers/bsp_f1xx_rtc.c **** 		while ((!(RCC->BDCR & 0X02)) && (temp < 72000000)) { temp++; }//等待外部时钟就绪
  30:drivers/bsp_f1xx_rtc.c **** 		if (temp >= 72000000)return 1;//初始化时钟失败,晶振有问题
  31:drivers/bsp_f1xx_rtc.c **** 		RCC->BDCR |= 1 << 8; //LSE作为RTC时钟
  32:drivers/bsp_f1xx_rtc.c **** 		RCC->BDCR |= 1 << 15;//RTC时钟使能
  33:drivers/bsp_f1xx_rtc.c **** 		while (!(RTC->CRL & (1 << 5))) {}//等待RTC寄存器操作完成
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 2


  34:drivers/bsp_f1xx_rtc.c **** //		while (!(RTC->CRL & (1 << 3))){}//等待RTC寄存器同步
  35:drivers/bsp_f1xx_rtc.c **** 		//	RTC->CRH |= 0X01;                  //允许秒中断
  36:drivers/bsp_f1xx_rtc.c **** //		while (!(RTC->CRL & (1 << 5)));//等待RTC寄存器操作完成
  37:drivers/bsp_f1xx_rtc.c **** 		RTC->CRL |= 1 << 4;           //允许配置
  38:drivers/bsp_f1xx_rtc.c **** 		RTC->PRLH = 0X0000;
  39:drivers/bsp_f1xx_rtc.c **** 		RTC->PRLL = 32767;          //时钟周期设置(有待观察,看是否跑慢了?)理论值：327
  40:drivers/bsp_f1xx_rtc.c **** 		RTC->CRL &= ~(1 << 4);           //配置更新
  41:drivers/bsp_f1xx_rtc.c **** 		while (!(RTC->CRL & (1 << 5)));   //等待RTC寄存器操作完成
  42:drivers/bsp_f1xx_rtc.c **** 		BKP->DR1 = 0X5050;
  43:drivers/bsp_f1xx_rtc.c **** 	}
  44:drivers/bsp_f1xx_rtc.c **** //	else//系统继续计时
  45:drivers/bsp_f1xx_rtc.c **** //	{
  46:drivers/bsp_f1xx_rtc.c **** //		while (!(RTC->CRL & BIT3));//等待RTC寄存器同步
  47:drivers/bsp_f1xx_rtc.c **** //		RTC->CRH |= 0X01;                  //允许秒中断
  48:drivers/bsp_f1xx_rtc.c **** //		while (!(RTC->CRL & BIT5));//等待RTC寄存器操作完成
  49:drivers/bsp_f1xx_rtc.c **** //	}
  50:drivers/bsp_f1xx_rtc.c **** //	MY_NVIC_Init(0, 8, RTC_IRQn, 0);//优先级设置
  51:drivers/bsp_f1xx_rtc.c **** //	RTC_Set(mTime.w_year,mTime.w_month,mTime.w_date,mTime.hour,mTime.min,mTime.sec);
  52:drivers/bsp_f1xx_rtc.c **** 	RTC_Get();//更新时间
  53:drivers/bsp_f1xx_rtc.c **** 
  54:drivers/bsp_f1xx_rtc.c **** 	return 0; //ok
  55:drivers/bsp_f1xx_rtc.c **** }
  56:drivers/bsp_f1xx_rtc.c **** 
  57:drivers/bsp_f1xx_rtc.c **** //RTC时钟中断
  58:drivers/bsp_f1xx_rtc.c **** //每秒触发一次
  59:drivers/bsp_f1xx_rtc.c **** void RTC_IRQHandler(void)
  60:drivers/bsp_f1xx_rtc.c **** {
  61:drivers/bsp_f1xx_rtc.c **** 	if (RTC->CRL & 0x0001)//秒钟中断
  62:drivers/bsp_f1xx_rtc.c **** 	{
  63:drivers/bsp_f1xx_rtc.c **** 		RTC_Get();//更新时间
  64:drivers/bsp_f1xx_rtc.c **** 	}
  65:drivers/bsp_f1xx_rtc.c **** 	if (RTC->CRL & 0x0002)//闹钟中断
  66:drivers/bsp_f1xx_rtc.c **** 	{
  67:drivers/bsp_f1xx_rtc.c **** 		RTC->CRL &= ~(0x0002);                //清闹钟中断
  68:drivers/bsp_f1xx_rtc.c **** 		//printf("Alarm!\n");
  69:drivers/bsp_f1xx_rtc.c **** 	}
  70:drivers/bsp_f1xx_rtc.c **** 	RTC->CRL &= 0X0FFA;         //清除溢出，秒钟中断标志
  71:drivers/bsp_f1xx_rtc.c **** //	while (!(RTC->CRL & (1 << 5)));//等待RTC寄存器操作完成
  72:drivers/bsp_f1xx_rtc.c **** }
  73:drivers/bsp_f1xx_rtc.c **** 
  74:drivers/bsp_f1xx_rtc.c **** //判断是否是闰年函数
  75:drivers/bsp_f1xx_rtc.c **** //月份   1  2  3  4  5  6  7  8  9  10 11 12
  76:drivers/bsp_f1xx_rtc.c **** //闰年   31 29 31 30 31 30 31 31 30 31 30 31
  77:drivers/bsp_f1xx_rtc.c **** //非闰年 31 28 31 30 31 30 31 31 30 31 30 31
  78:drivers/bsp_f1xx_rtc.c **** //year:年份
  79:drivers/bsp_f1xx_rtc.c **** //返回值:该年份是不是闰年.1,是.0,不是
  80:drivers/bsp_f1xx_rtc.c **** u8 Is_Leap_Year(u16 year)
  81:drivers/bsp_f1xx_rtc.c **** {
  26              		.loc 1 81 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  82:drivers/bsp_f1xx_rtc.c **** 	if (year % 4 == 0) //必须能被4整除
  32              		.loc 1 82 0
  33 0000 10F0030F 		tst	r0, #3
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 3


  34 0004 16D1     		bne	.L3
  83:drivers/bsp_f1xx_rtc.c **** 	{
  84:drivers/bsp_f1xx_rtc.c **** 		if (year % 100 == 0) {
  35              		.loc 1 84 0
  36 0006 0D4B     		ldr	r3, .L7
  37 0008 A3FB0023 		umull	r2, r3, r3, r0
  38 000c 5B09     		lsrs	r3, r3, #5
  39 000e 6422     		movs	r2, #100
  40 0010 02FB1303 		mls	r3, r2, r3, r0
  41 0014 9BB2     		uxth	r3, r3
  42 0016 7BB9     		cbnz	r3, .L4
  85:drivers/bsp_f1xx_rtc.c **** 			if (year % 400 == 0)return 1;//如果以00结尾,还要能被400整除
  43              		.loc 1 85 0
  44 0018 084B     		ldr	r3, .L7
  45 001a A3FB0023 		umull	r2, r3, r3, r0
  46 001e DB09     		lsrs	r3, r3, #7
  47 0020 4FF4C872 		mov	r2, #400
  48 0024 02FB1300 		mls	r0, r2, r3, r0
  49              	.LVL1:
  50 0028 80B2     		uxth	r0, r0
  51 002a 08B1     		cbz	r0, .L6
  86:drivers/bsp_f1xx_rtc.c **** 			else return 0;
  52              		.loc 1 86 0
  53 002c 0020     		movs	r0, #0
  87:drivers/bsp_f1xx_rtc.c **** 		} else return 1;
  88:drivers/bsp_f1xx_rtc.c **** 	} else return 0;
  89:drivers/bsp_f1xx_rtc.c **** }
  54              		.loc 1 89 0
  55 002e 7047     		bx	lr
  56              	.L6:
  85:drivers/bsp_f1xx_rtc.c **** 			else return 0;
  57              		.loc 1 85 0
  58 0030 0120     		movs	r0, #1
  59 0032 7047     		bx	lr
  60              	.LVL2:
  61              	.L3:
  88:drivers/bsp_f1xx_rtc.c **** }
  62              		.loc 1 88 0
  63 0034 0020     		movs	r0, #0
  64              	.LVL3:
  65 0036 7047     		bx	lr
  66              	.LVL4:
  67              	.L4:
  87:drivers/bsp_f1xx_rtc.c **** 		} else return 1;
  68              		.loc 1 87 0
  69 0038 0120     		movs	r0, #1
  70              	.LVL5:
  71 003a 7047     		bx	lr
  72              	.L8:
  73              		.align	2
  74              	.L7:
  75 003c 1F85EB51 		.word	1374389535
  76              		.cfi_endproc
  77              	.LFE68:
  79              		.section	.text.RTC_Set,"ax",%progbits
  80              		.align	1
  81              		.global	RTC_Set
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 4


  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	RTC_Set:
  88              	.LFB69:
  90:drivers/bsp_f1xx_rtc.c **** 
  91:drivers/bsp_f1xx_rtc.c **** //设置时钟
  92:drivers/bsp_f1xx_rtc.c **** //把输入的时钟转换为秒钟
  93:drivers/bsp_f1xx_rtc.c **** //以1970年1月1日为基准
  94:drivers/bsp_f1xx_rtc.c **** //1970~2099年为合法年份
  95:drivers/bsp_f1xx_rtc.c **** //返回值:0,成功;其他:错误代码.
  96:drivers/bsp_f1xx_rtc.c **** //月份数据表
  97:drivers/bsp_f1xx_rtc.c **** u8 const table_week[12] = {0, 3, 3, 6, 1, 4, 6, 2, 5, 0, 3, 5}; //月修正数据表
  98:drivers/bsp_f1xx_rtc.c **** //平年的月份日期表
  99:drivers/bsp_f1xx_rtc.c **** const u8 mon_table[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
 100:drivers/bsp_f1xx_rtc.c **** 
 101:drivers/bsp_f1xx_rtc.c **** //syear,smon,sday,hour,min,sec：年月日时分秒
 102:drivers/bsp_f1xx_rtc.c **** //返回值：设置结果。0，成功；1，失败。
 103:drivers/bsp_f1xx_rtc.c **** u8 RTC_Set(u16 syear, u8 smon, u8 sday, u8 hour, u8 min, u8 sec)
 104:drivers/bsp_f1xx_rtc.c **** {
  89              		.loc 1 104 0
  90              		.cfi_startproc
  91              		@ args = 8, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL6:
  94 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  95              	.LCFI0:
  96              		.cfi_def_cfa_offset 32
  97              		.cfi_offset 4, -32
  98              		.cfi_offset 5, -28
  99              		.cfi_offset 6, -24
 100              		.cfi_offset 7, -20
 101              		.cfi_offset 8, -16
 102              		.cfi_offset 9, -12
 103              		.cfi_offset 10, -8
 104              		.cfi_offset 14, -4
 105 0004 9DF82090 		ldrb	r9, [sp, #32]	@ zero_extendqisi2
 106              	.LVL7:
 105:drivers/bsp_f1xx_rtc.c **** 	u16 t;
 106:drivers/bsp_f1xx_rtc.c **** 	u32 seccount = 0;
 107:drivers/bsp_f1xx_rtc.c **** 
 108:drivers/bsp_f1xx_rtc.c **** 	if (syear < 1970 || syear > 2099)return 1;
 107              		.loc 1 108 0
 108 0008 A0F2B275 		subw	r5, r0, #1970
 109 000c ADB2     		uxth	r5, r5
 110 000e 812D     		cmp	r5, #129
 111 0010 71D8     		bhi	.L19
 112 0012 9846     		mov	r8, r3
 113 0014 1746     		mov	r7, r2
 114 0016 8A46     		mov	r10, r1
 115 0018 0646     		mov	r6, r0
 106:drivers/bsp_f1xx_rtc.c **** 
 116              		.loc 1 106 0
 117 001a 0024     		movs	r4, #0
 109:drivers/bsp_f1xx_rtc.c **** 	for (t = 1970; t < syear; t++)        //把所有年份的秒钟相加
 118              		.loc 1 109 0
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 5


 119 001c 40F2B275 		movw	r5, #1970
 120 0020 07E0     		b	.L11
 121              	.LVL8:
 122              	.L12:
 110:drivers/bsp_f1xx_rtc.c **** 	{
 111:drivers/bsp_f1xx_rtc.c **** 		if (Is_Leap_Year(t))seccount += 31622400;//闰年的秒钟数
 112:drivers/bsp_f1xx_rtc.c **** 		else seccount += 31536000;                          //平年的秒钟数
 123              		.loc 1 112 0
 124 0022 04F1F074 		add	r4, r4, #31457280
 125              	.LVL9:
 126 0026 04F59934 		add	r4, r4, #78336
 127              	.LVL10:
 128 002a 04F5C074 		add	r4, r4, #384
 129              	.LVL11:
 130              	.L13:
 109:drivers/bsp_f1xx_rtc.c **** 	for (t = 1970; t < syear; t++)        //把所有年份的秒钟相加
 131              		.loc 1 109 0 discriminator 2
 132 002e 0135     		adds	r5, r5, #1
 133              	.LVL12:
 134 0030 ADB2     		uxth	r5, r5
 135              	.LVL13:
 136              	.L11:
 109:drivers/bsp_f1xx_rtc.c **** 	for (t = 1970; t < syear; t++)        //把所有年份的秒钟相加
 137              		.loc 1 109 0 is_stmt 0 discriminator 1
 138 0032 B542     		cmp	r5, r6
 139 0034 09D2     		bcs	.L21
 111:drivers/bsp_f1xx_rtc.c **** 		else seccount += 31536000;                          //平年的秒钟数
 140              		.loc 1 111 0 is_stmt 1
 141 0036 2846     		mov	r0, r5
 142 0038 FFF7FEFF 		bl	Is_Leap_Year
 143              	.LVL14:
 144 003c 0028     		cmp	r0, #0
 145 003e F0D0     		beq	.L12
 111:drivers/bsp_f1xx_rtc.c **** 		else seccount += 31536000;                          //平年的秒钟数
 146              		.loc 1 111 0 is_stmt 0 discriminator 1
 147 0040 04F1F174 		add	r4, r4, #31588352
 148              	.LVL15:
 149 0044 04F50544 		add	r4, r4, #34048
 150              	.LVL16:
 151 0048 F1E7     		b	.L13
 152              	.L21:
 113:drivers/bsp_f1xx_rtc.c **** 	}
 114:drivers/bsp_f1xx_rtc.c **** 	smon -= 1;
 153              		.loc 1 114 0 is_stmt 1
 154 004a 0AF1FF3A 		add	r10, r10, #-1
 155 004e 5FFA8AFA 		uxtb	r10, r10
 156              	.LVL17:
 115:drivers/bsp_f1xx_rtc.c **** 	for (t = 0; t < smon; t++)           //把前面月份的秒钟数相加
 157              		.loc 1 115 0
 158 0052 0025     		movs	r5, #0
 159 0054 01E0     		b	.L15
 160              	.LVL18:
 161              	.L16:
 162              		.loc 1 115 0 is_stmt 0 discriminator 2
 163 0056 0135     		adds	r5, r5, #1
 164              	.LVL19:
 165 0058 ADB2     		uxth	r5, r5
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 6


 166              	.LVL20:
 167              	.L15:
 168              		.loc 1 115 0 discriminator 1
 169 005a 1FFA8AF3 		uxth	r3, r10
 170 005e AB42     		cmp	r3, r5
 171 0060 10D9     		bls	.L22
 116:drivers/bsp_f1xx_rtc.c **** 	{
 117:drivers/bsp_f1xx_rtc.c **** 		seccount += (u32) mon_table[t] * 86400;//月份秒钟数相加
 172              		.loc 1 117 0 is_stmt 1
 173 0062 264B     		ldr	r3, .L23
 174 0064 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 175 0066 264A     		ldr	r2, .L23+4
 176 0068 02FB0344 		mla	r4, r2, r3, r4
 177              	.LVL21:
 118:drivers/bsp_f1xx_rtc.c **** 		if (Is_Leap_Year(syear) && t == 1)seccount += 86400;//闰年2月份增加一天的秒钟数
 178              		.loc 1 118 0
 179 006c 3046     		mov	r0, r6
 180 006e FFF7FEFF 		bl	Is_Leap_Year
 181              	.LVL22:
 182 0072 0028     		cmp	r0, #0
 183 0074 EFD0     		beq	.L16
 184              		.loc 1 118 0 is_stmt 0 discriminator 1
 185 0076 012D     		cmp	r5, #1
 186 0078 EDD1     		bne	.L16
 187              		.loc 1 118 0 discriminator 2
 188 007a 04F5A834 		add	r4, r4, #86016
 189              	.LVL23:
 190 007e 04F5C074 		add	r4, r4, #384
 191              	.LVL24:
 192 0082 E8E7     		b	.L16
 193              	.L22:
 119:drivers/bsp_f1xx_rtc.c **** 	}
 120:drivers/bsp_f1xx_rtc.c **** 	seccount += (u32) (sday - 1) * 86400;//把前面日期的秒钟数相加
 194              		.loc 1 120 0 is_stmt 1
 195 0084 013F     		subs	r7, r7, #1
 196 0086 1E4B     		ldr	r3, .L23+4
 197 0088 03FB0744 		mla	r4, r3, r7, r4
 198              	.LVL25:
 121:drivers/bsp_f1xx_rtc.c **** 	seccount += (u32) hour * 3600;//小时秒钟数
 199              		.loc 1 121 0
 200 008c 4FF46162 		mov	r2, #3600
 201 0090 02FB0848 		mla	r8, r2, r8, r4
 202              	.LVL26:
 122:drivers/bsp_f1xx_rtc.c **** 	seccount += (u32) min * 60;         //分钟秒钟数
 203              		.loc 1 122 0
 204 0094 C9EB0919 		rsb	r9, r9, r9, lsl #4
 205 0098 4FEA8902 		lsl	r2, r9, #2
 206 009c 4244     		add	r2, r2, r8
 207              	.LVL27:
 123:drivers/bsp_f1xx_rtc.c **** 	seccount += sec;//最后的秒钟加上去
 208              		.loc 1 123 0
 209 009e 9DF82480 		ldrb	r8, [sp, #36]	@ zero_extendqisi2
 210 00a2 9044     		add	r8, r8, r2
 211              	.LVL28:
 124:drivers/bsp_f1xx_rtc.c **** 
 125:drivers/bsp_f1xx_rtc.c **** 	INTX_DISABLE();
 212              		.loc 1 125 0
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 7


 213 00a4 FFF7FEFF 		bl	INTX_DISABLE
 214              	.LVL29:
 126:drivers/bsp_f1xx_rtc.c **** 	//设置时钟
 127:drivers/bsp_f1xx_rtc.c **** 	RCC->APB1ENR |= BIT28;//使能电源时钟
 215              		.loc 1 127 0
 216 00a8 164B     		ldr	r3, .L23+8
 217 00aa DA69     		ldr	r2, [r3, #28]
 218 00ac 42F08052 		orr	r2, r2, #268435456
 219 00b0 DA61     		str	r2, [r3, #28]
 220              	.LVL30:
 128:drivers/bsp_f1xx_rtc.c **** 	RCC->APB1ENR |= BIT27;//使能备份时钟
 221              		.loc 1 128 0
 222 00b2 DA69     		ldr	r2, [r3, #28]
 223 00b4 42F00062 		orr	r2, r2, #134217728
 224 00b8 DA61     		str	r2, [r3, #28]
 129:drivers/bsp_f1xx_rtc.c **** 	PWR->CR |= BIT8;    //取消备份区写保护
 225              		.loc 1 129 0
 226 00ba 134A     		ldr	r2, .L23+12
 227 00bc 1368     		ldr	r3, [r2]
 228 00be 43F48073 		orr	r3, r3, #256
 229 00c2 1360     		str	r3, [r2]
 130:drivers/bsp_f1xx_rtc.c **** 	//上面三步是必须的!
 131:drivers/bsp_f1xx_rtc.c **** 	RTC->CRL |= BIT4;   //允许配置
 230              		.loc 1 131 0
 231 00c4 114B     		ldr	r3, .L23+16
 232 00c6 5A68     		ldr	r2, [r3, #4]
 233 00c8 42F01002 		orr	r2, r2, #16
 234 00cc 5A60     		str	r2, [r3, #4]
 132:drivers/bsp_f1xx_rtc.c **** 	RTC->CNTL = seccount & 0xffff;
 235              		.loc 1 132 0
 236 00ce 1FFA88F2 		uxth	r2, r8
 237 00d2 DA61     		str	r2, [r3, #28]
 133:drivers/bsp_f1xx_rtc.c **** 	RTC->CNTH = seccount >> 16;
 238              		.loc 1 133 0
 239 00d4 4FEA1842 		lsr	r2, r8, #16
 240 00d8 9A61     		str	r2, [r3, #24]
 134:drivers/bsp_f1xx_rtc.c **** 	RTC->CRL &= ~BIT4;//配置更新
 241              		.loc 1 134 0
 242 00da 5A68     		ldr	r2, [r3, #4]
 243 00dc 22F01002 		bic	r2, r2, #16
 244 00e0 5A60     		str	r2, [r3, #4]
 245              	.L18:
 135:drivers/bsp_f1xx_rtc.c **** 	while (!(RTC->CRL & (1 << 5)));//等待RTC寄存器操作完成
 246              		.loc 1 135 0 discriminator 1
 247 00e2 0A4B     		ldr	r3, .L23+16
 248 00e4 5B68     		ldr	r3, [r3, #4]
 249 00e6 13F0200F 		tst	r3, #32
 250 00ea FAD0     		beq	.L18
 136:drivers/bsp_f1xx_rtc.c **** 	INTX_ENABLE();
 251              		.loc 1 136 0
 252 00ec FFF7FEFF 		bl	INTX_ENABLE
 253              	.LVL31:
 137:drivers/bsp_f1xx_rtc.c **** 	return 0;
 254              		.loc 1 137 0
 255 00f0 0020     		movs	r0, #0
 256              	.LVL32:
 257              	.L10:
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 8


 138:drivers/bsp_f1xx_rtc.c **** }
 258              		.loc 1 138 0
 259 00f2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 260              	.LVL33:
 261              	.L19:
 108:drivers/bsp_f1xx_rtc.c **** 	for (t = 1970; t < syear; t++)        //把所有年份的秒钟相加
 262              		.loc 1 108 0
 263 00f6 0120     		movs	r0, #1
 264              	.LVL34:
 265 00f8 FBE7     		b	.L10
 266              	.L24:
 267 00fa 00BF     		.align	2
 268              	.L23:
 269 00fc 00000000 		.word	.LANCHOR0
 270 0100 80510100 		.word	86400
 271 0104 00100240 		.word	1073876992
 272 0108 00700040 		.word	1073770496
 273 010c 00280040 		.word	1073752064
 274              		.cfi_endproc
 275              	.LFE69:
 277              		.section	.text.RtcSetBySec,"ax",%progbits
 278              		.align	1
 279              		.global	RtcSetBySec
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 283              		.fpu softvfp
 285              	RtcSetBySec:
 286              	.LFB70:
 139:drivers/bsp_f1xx_rtc.c **** 
 140:drivers/bsp_f1xx_rtc.c **** void RtcSetBySec(u32 sec)
 141:drivers/bsp_f1xx_rtc.c **** {
 287              		.loc 1 141 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL35:
 292 0000 10B5     		push	{r4, lr}
 293              	.LCFI1:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 4, -8
 296              		.cfi_offset 14, -4
 297 0002 0446     		mov	r4, r0
 142:drivers/bsp_f1xx_rtc.c **** 	INTX_DISABLE();
 298              		.loc 1 142 0
 299 0004 FFF7FEFF 		bl	INTX_DISABLE
 300              	.LVL36:
 143:drivers/bsp_f1xx_rtc.c **** 	//设置时钟
 144:drivers/bsp_f1xx_rtc.c **** 	RCC->APB1ENR |= BIT28;//使能电源时钟
 301              		.loc 1 144 0
 302 0008 114B     		ldr	r3, .L28
 303 000a DA69     		ldr	r2, [r3, #28]
 304 000c 42F08052 		orr	r2, r2, #268435456
 305 0010 DA61     		str	r2, [r3, #28]
 145:drivers/bsp_f1xx_rtc.c **** 	RCC->APB1ENR |= BIT27;//使能备份时钟
 306              		.loc 1 145 0
 307 0012 DA69     		ldr	r2, [r3, #28]
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 9


 308 0014 42F00062 		orr	r2, r2, #134217728
 309 0018 DA61     		str	r2, [r3, #28]
 146:drivers/bsp_f1xx_rtc.c **** 	PWR->CR |= BIT8;    //取消备份区写保护
 310              		.loc 1 146 0
 311 001a 0E4A     		ldr	r2, .L28+4
 312 001c 1368     		ldr	r3, [r2]
 313 001e 43F48073 		orr	r3, r3, #256
 314 0022 1360     		str	r3, [r2]
 147:drivers/bsp_f1xx_rtc.c **** 	//上面三步是必须的!
 148:drivers/bsp_f1xx_rtc.c **** 	RTC->CRL |= BIT4;   //允许配置
 315              		.loc 1 148 0
 316 0024 0C4B     		ldr	r3, .L28+8
 317 0026 5A68     		ldr	r2, [r3, #4]
 318 0028 42F01002 		orr	r2, r2, #16
 319 002c 5A60     		str	r2, [r3, #4]
 149:drivers/bsp_f1xx_rtc.c **** 	RTC->CNTL = sec & 0xffff;
 320              		.loc 1 149 0
 321 002e A2B2     		uxth	r2, r4
 322 0030 DA61     		str	r2, [r3, #28]
 150:drivers/bsp_f1xx_rtc.c **** 	RTC->CNTH = sec >> 16;
 323              		.loc 1 150 0
 324 0032 240C     		lsrs	r4, r4, #16
 325              	.LVL37:
 326 0034 9C61     		str	r4, [r3, #24]
 151:drivers/bsp_f1xx_rtc.c **** 	RTC->CRL &= ~BIT4;//配置更新
 327              		.loc 1 151 0
 328 0036 5A68     		ldr	r2, [r3, #4]
 329 0038 22F01002 		bic	r2, r2, #16
 330 003c 5A60     		str	r2, [r3, #4]
 331              	.L26:
 152:drivers/bsp_f1xx_rtc.c **** 	while (!(RTC->CRL & (1 << 5)));//等待RTC寄存器操作完成
 332              		.loc 1 152 0 discriminator 1
 333 003e 064B     		ldr	r3, .L28+8
 334 0040 5B68     		ldr	r3, [r3, #4]
 335 0042 13F0200F 		tst	r3, #32
 336 0046 FAD0     		beq	.L26
 153:drivers/bsp_f1xx_rtc.c **** 	INTX_ENABLE();
 337              		.loc 1 153 0
 338 0048 FFF7FEFF 		bl	INTX_ENABLE
 339              	.LVL38:
 154:drivers/bsp_f1xx_rtc.c **** }
 340              		.loc 1 154 0
 341 004c 10BD     		pop	{r4, pc}
 342              	.L29:
 343 004e 00BF     		.align	2
 344              	.L28:
 345 0050 00100240 		.word	1073876992
 346 0054 00700040 		.word	1073770496
 347 0058 00280040 		.word	1073752064
 348              		.cfi_endproc
 349              	.LFE70:
 351              		.section	.text.RTC_Get_Week,"ax",%progbits
 352              		.align	1
 353              		.global	RTC_Get_Week
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 10


 357              		.fpu softvfp
 359              	RTC_Get_Week:
 360              	.LFB72:
 155:drivers/bsp_f1xx_rtc.c **** 
 156:drivers/bsp_f1xx_rtc.c **** //char time[50];
 157:drivers/bsp_f1xx_rtc.c **** //得到当前的时间，结果保存在calendar结构体里面
 158:drivers/bsp_f1xx_rtc.c **** //返回值:0,成功;其他:错误代码.
 159:drivers/bsp_f1xx_rtc.c **** u8 RTC_Get(void)
 160:drivers/bsp_f1xx_rtc.c **** {
 161:drivers/bsp_f1xx_rtc.c **** 	u32 timecount = 0;
 162:drivers/bsp_f1xx_rtc.c **** 	u32 temp = 0;
 163:drivers/bsp_f1xx_rtc.c **** 	u16 temp1 = 0;
 164:drivers/bsp_f1xx_rtc.c **** 
 165:drivers/bsp_f1xx_rtc.c **** 	timecount = RTC->CNTH;//得到计数器中的值(秒钟数)
 166:drivers/bsp_f1xx_rtc.c **** 	timecount <<= 16;
 167:drivers/bsp_f1xx_rtc.c **** 	timecount += RTC->CNTL;
 168:drivers/bsp_f1xx_rtc.c **** 	mTime.seCnt = timecount;
 169:drivers/bsp_f1xx_rtc.c **** 
 170:drivers/bsp_f1xx_rtc.c **** 	temp = timecount / 86400;   //得到天数(秒钟数对应的)
 171:drivers/bsp_f1xx_rtc.c **** 
 172:drivers/bsp_f1xx_rtc.c **** 	temp1 = 1970;        //从1970年开始
 173:drivers/bsp_f1xx_rtc.c **** 	while (temp >= 365) {
 174:drivers/bsp_f1xx_rtc.c **** 		if (Is_Leap_Year(temp1))//是闰年
 175:drivers/bsp_f1xx_rtc.c **** 		{
 176:drivers/bsp_f1xx_rtc.c **** 			if (temp >= 366)temp -= 366;//闰年的秒钟数
 177:drivers/bsp_f1xx_rtc.c **** 			else break;
 178:drivers/bsp_f1xx_rtc.c **** 		} else temp -= 365;          //平年
 179:drivers/bsp_f1xx_rtc.c **** 		temp1++;
 180:drivers/bsp_f1xx_rtc.c **** 	}
 181:drivers/bsp_f1xx_rtc.c **** 	mTime.w_year = temp1;//得到年份
 182:drivers/bsp_f1xx_rtc.c **** 	temp1 = 0;
 183:drivers/bsp_f1xx_rtc.c **** 	while (temp >= 28)//超过了一个月
 184:drivers/bsp_f1xx_rtc.c **** 	{
 185:drivers/bsp_f1xx_rtc.c **** 		if (Is_Leap_Year(mTime.w_year) && temp1 == 1)//当年是不是闰年/2月份
 186:drivers/bsp_f1xx_rtc.c **** 		{
 187:drivers/bsp_f1xx_rtc.c **** 			if (temp >= 29)temp -= 29;//闰年的秒钟数
 188:drivers/bsp_f1xx_rtc.c **** 			else break;
 189:drivers/bsp_f1xx_rtc.c **** 		} else {
 190:drivers/bsp_f1xx_rtc.c **** 			if (temp >= mon_table[temp1])temp -= mon_table[temp1];//平年
 191:drivers/bsp_f1xx_rtc.c **** 			else break;
 192:drivers/bsp_f1xx_rtc.c **** 		}
 193:drivers/bsp_f1xx_rtc.c **** 		temp1++;
 194:drivers/bsp_f1xx_rtc.c **** 	}
 195:drivers/bsp_f1xx_rtc.c **** 	mTime.w_month = temp1 + 1;        //得到月份
 196:drivers/bsp_f1xx_rtc.c **** 	mTime.w_date = temp + 1;        //得到日期
 197:drivers/bsp_f1xx_rtc.c **** 
 198:drivers/bsp_f1xx_rtc.c **** 	temp = timecount % 86400;                //得到秒钟数
 199:drivers/bsp_f1xx_rtc.c **** 	mTime.hour = temp / 3600;        //小时
 200:drivers/bsp_f1xx_rtc.c **** 	mTime.min = (temp % 3600) / 60;        //分钟
 201:drivers/bsp_f1xx_rtc.c **** 	mTime.sec = (temp % 3600) % 60;        //秒钟
 202:drivers/bsp_f1xx_rtc.c **** 	mTime.week = RTC_Get_Week(mTime.w_year, mTime.w_month, mTime.w_date);//获取星期
 203:drivers/bsp_f1xx_rtc.c **** 
 204:drivers/bsp_f1xx_rtc.c **** 	return 0;
 205:drivers/bsp_f1xx_rtc.c **** }
 206:drivers/bsp_f1xx_rtc.c **** 
 207:drivers/bsp_f1xx_rtc.c **** //获得现在是星期几
 208:drivers/bsp_f1xx_rtc.c **** //功能描述:输入公历日期得到星期(只允许1901-2099年)
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 11


 209:drivers/bsp_f1xx_rtc.c **** //year,month,day：公历年月日
 210:drivers/bsp_f1xx_rtc.c **** //返回值：星期号
 211:drivers/bsp_f1xx_rtc.c **** u8 RTC_Get_Week(u16 year, u8 month, u8 day)
 212:drivers/bsp_f1xx_rtc.c **** {
 361              		.loc 1 212 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 366              	.LVL39:
 367 0000 30B4     		push	{r4, r5}
 368              	.LCFI2:
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 4, -8
 371              		.cfi_offset 5, -4
 213:drivers/bsp_f1xx_rtc.c **** 	u16 temp2;
 214:drivers/bsp_f1xx_rtc.c **** 	u8 yearH, yearL;
 215:drivers/bsp_f1xx_rtc.c **** 
 216:drivers/bsp_f1xx_rtc.c **** 	yearH = year / 100;
 372              		.loc 1 216 0
 373 0002 1A4C     		ldr	r4, .L34
 374 0004 A4FB0034 		umull	r3, r4, r4, r0
 375 0008 6409     		lsrs	r4, r4, #5
 376 000a E3B2     		uxtb	r3, r4
 377              	.LVL40:
 217:drivers/bsp_f1xx_rtc.c **** 	yearL = year % 100;
 378              		.loc 1 217 0
 379 000c 6425     		movs	r5, #100
 380 000e 05FB1404 		mls	r4, r5, r4, r0
 381 0012 E4B2     		uxtb	r4, r4
 382              	.LVL41:
 218:drivers/bsp_f1xx_rtc.c **** 	// 如果为21世纪,年份数加100
 219:drivers/bsp_f1xx_rtc.c **** 	if (yearH > 19)yearL += 100;
 383              		.loc 1 219 0
 384 0014 132B     		cmp	r3, #19
 385 0016 01D9     		bls	.L31
 386              		.loc 1 219 0 is_stmt 0 discriminator 1
 387 0018 2C44     		add	r4, r4, r5
 388              	.LVL42:
 389 001a E4B2     		uxtb	r4, r4
 390              	.LVL43:
 391              	.L31:
 220:drivers/bsp_f1xx_rtc.c **** 	// 所过闰年数只算1900年之后的
 221:drivers/bsp_f1xx_rtc.c **** 	temp2 = yearL + yearL / 4;
 392              		.loc 1 221 0 is_stmt 1
 393 001c 04EB9403 		add	r3, r4, r4, lsr #2
 394              	.LVL44:
 222:drivers/bsp_f1xx_rtc.c **** 	temp2 = temp2 % 7;
 395              		.loc 1 222 0
 396 0020 134D     		ldr	r5, .L34+4
 397 0022 A5FB0305 		umull	r0, r5, r5, r3
 398              	.LVL45:
 399 0026 581B     		subs	r0, r3, r5
 400 0028 05EB5000 		add	r0, r5, r0, lsr #1
 401 002c 8008     		lsrs	r0, r0, #2
 402 002e C0EBC000 		rsb	r0, r0, r0, lsl #3
 403 0032 181A     		subs	r0, r3, r0
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 12


 404 0034 80B2     		uxth	r0, r0
 405              	.LVL46:
 223:drivers/bsp_f1xx_rtc.c **** 	temp2 = temp2 + day + table_week[month - 1];
 406              		.loc 1 223 0
 407 0036 1044     		add	r0, r0, r2
 408              	.LVL47:
 409 0038 80B2     		uxth	r0, r0
 410 003a 4B1E     		subs	r3, r1, #1
 411              	.LVL48:
 412 003c 0D4A     		ldr	r2, .L34+8
 413              	.LVL49:
 414 003e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 415 0040 1044     		add	r0, r0, r2
 416 0042 80B2     		uxth	r0, r0
 417              	.LVL50:
 224:drivers/bsp_f1xx_rtc.c **** 	if (yearL % 4 == 0 && month < 3)temp2--;
 418              		.loc 1 224 0
 419 0044 14F0030F 		tst	r4, #3
 420 0048 03D1     		bne	.L32
 421              		.loc 1 224 0 is_stmt 0 discriminator 1
 422 004a 0229     		cmp	r1, #2
 423 004c 01D8     		bhi	.L32
 424              		.loc 1 224 0 discriminator 2
 425 004e 0138     		subs	r0, r0, #1
 426              	.LVL51:
 427 0050 80B2     		uxth	r0, r0
 428              	.LVL52:
 429              	.L32:
 225:drivers/bsp_f1xx_rtc.c **** 	return (temp2 % 7);
 430              		.loc 1 225 0 is_stmt 1
 431 0052 074B     		ldr	r3, .L34+4
 432 0054 A3FB0023 		umull	r2, r3, r3, r0
 433 0058 C21A     		subs	r2, r0, r3
 434 005a 03EB5203 		add	r3, r3, r2, lsr #1
 435 005e 9B08     		lsrs	r3, r3, #2
 436 0060 C3EBC303 		rsb	r3, r3, r3, lsl #3
 437 0064 C01A     		subs	r0, r0, r3
 438              	.LVL53:
 226:drivers/bsp_f1xx_rtc.c **** }
 439              		.loc 1 226 0
 440 0066 C0B2     		uxtb	r0, r0
 441 0068 30BC     		pop	{r4, r5}
 442              	.LCFI3:
 443              		.cfi_restore 5
 444              		.cfi_restore 4
 445              		.cfi_def_cfa_offset 0
 446              	.LVL54:
 447 006a 7047     		bx	lr
 448              	.L35:
 449              		.align	2
 450              	.L34:
 451 006c 1F85EB51 		.word	1374389535
 452 0070 25499224 		.word	613566757
 453 0074 00000000 		.word	.LANCHOR1
 454              		.cfi_endproc
 455              	.LFE72:
 457              		.section	.text.RTC_Get,"ax",%progbits
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 13


 458              		.align	1
 459              		.global	RTC_Get
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 463              		.fpu softvfp
 465              	RTC_Get:
 466              	.LFB71:
 160:drivers/bsp_f1xx_rtc.c **** 	u32 timecount = 0;
 467              		.loc 1 160 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 472              	.LCFI4:
 473              		.cfi_def_cfa_offset 24
 474              		.cfi_offset 3, -24
 475              		.cfi_offset 4, -20
 476              		.cfi_offset 5, -16
 477              		.cfi_offset 6, -12
 478              		.cfi_offset 7, -8
 479              		.cfi_offset 14, -4
 480              	.LVL55:
 165:drivers/bsp_f1xx_rtc.c **** 	timecount <<= 16;
 481              		.loc 1 165 0
 482 0002 2F4B     		ldr	r3, .L48
 483 0004 9A69     		ldr	r2, [r3, #24]
 484              	.LVL56:
 167:drivers/bsp_f1xx_rtc.c **** 	mTime.seCnt = timecount;
 485              		.loc 1 167 0
 486 0006 DF69     		ldr	r7, [r3, #28]
 487 0008 07EB0247 		add	r7, r7, r2, lsl #16
 488              	.LVL57:
 168:drivers/bsp_f1xx_rtc.c **** 
 489              		.loc 1 168 0
 490 000c 2D4B     		ldr	r3, .L48+4
 491 000e DF60     		str	r7, [r3, #12]
 170:drivers/bsp_f1xx_rtc.c **** 
 492              		.loc 1 170 0
 493 0010 2D4C     		ldr	r4, .L48+8
 494 0012 A4FB0734 		umull	r3, r4, r4, r7
 495 0016 240C     		lsrs	r4, r4, #16
 496              	.LVL58:
 172:drivers/bsp_f1xx_rtc.c **** 	while (temp >= 365) {
 497              		.loc 1 172 0
 498 0018 40F2B276 		movw	r6, #1970
 173:drivers/bsp_f1xx_rtc.c **** 		if (Is_Leap_Year(temp1))//是闰年
 499              		.loc 1 173 0
 500 001c 03E0     		b	.L37
 501              	.LVL59:
 502              	.L38:
 178:drivers/bsp_f1xx_rtc.c **** 		temp1++;
 503              		.loc 1 178 0
 504 001e A4F26D14 		subw	r4, r4, #365
 505              	.LVL60:
 506              	.L40:
 179:drivers/bsp_f1xx_rtc.c **** 	}
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 14


 507              		.loc 1 179 0
 508 0022 0136     		adds	r6, r6, #1
 509              	.LVL61:
 510 0024 B6B2     		uxth	r6, r6
 511              	.LVL62:
 512              	.L37:
 173:drivers/bsp_f1xx_rtc.c **** 		if (Is_Leap_Year(temp1))//是闰年
 513              		.loc 1 173 0
 514 0026 B4F5B67F 		cmp	r4, #364
 515 002a 0AD9     		bls	.L39
 174:drivers/bsp_f1xx_rtc.c **** 		{
 516              		.loc 1 174 0
 517 002c 3046     		mov	r0, r6
 518 002e FFF7FEFF 		bl	Is_Leap_Year
 519              	.LVL63:
 520 0032 0028     		cmp	r0, #0
 521 0034 F3D0     		beq	.L38
 176:drivers/bsp_f1xx_rtc.c **** 			else break;
 522              		.loc 1 176 0
 523 0036 B4F5B77F 		cmp	r4, #366
 524 003a 02D3     		bcc	.L39
 176:drivers/bsp_f1xx_rtc.c **** 			else break;
 525              		.loc 1 176 0 is_stmt 0 discriminator 1
 526 003c A4F5B774 		sub	r4, r4, #366
 527              	.LVL64:
 528 0040 EFE7     		b	.L40
 529              	.L39:
 181:drivers/bsp_f1xx_rtc.c **** 	temp1 = 0;
 530              		.loc 1 181 0 is_stmt 1
 531 0042 204B     		ldr	r3, .L48+4
 532 0044 9E80     		strh	r6, [r3, #4]	@ movhi
 533              	.LVL65:
 182:drivers/bsp_f1xx_rtc.c **** 	while (temp >= 28)//超过了一个月
 534              		.loc 1 182 0
 535 0046 0025     		movs	r5, #0
 183:drivers/bsp_f1xx_rtc.c **** 	{
 536              		.loc 1 183 0
 537 0048 06E0     		b	.L42
 538              	.LVL66:
 539              	.L43:
 190:drivers/bsp_f1xx_rtc.c **** 			else break;
 540              		.loc 1 190 0
 541 004a 204B     		ldr	r3, .L48+12
 542 004c 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 543 004e A342     		cmp	r3, r4
 544 0050 0FD8     		bhi	.L44
 190:drivers/bsp_f1xx_rtc.c **** 			else break;
 545              		.loc 1 190 0 is_stmt 0 discriminator 1
 546 0052 E41A     		subs	r4, r4, r3
 547              	.LVL67:
 548              	.L45:
 193:drivers/bsp_f1xx_rtc.c **** 	}
 549              		.loc 1 193 0 is_stmt 1
 550 0054 0135     		adds	r5, r5, #1
 551              	.LVL68:
 552 0056 ADB2     		uxth	r5, r5
 553              	.LVL69:
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 15


 554              	.L42:
 183:drivers/bsp_f1xx_rtc.c **** 	{
 555              		.loc 1 183 0
 556 0058 1B2C     		cmp	r4, #27
 557 005a 0AD9     		bls	.L44
 185:drivers/bsp_f1xx_rtc.c **** 		{
 558              		.loc 1 185 0
 559 005c 3046     		mov	r0, r6
 560 005e FFF7FEFF 		bl	Is_Leap_Year
 561              	.LVL70:
 562 0062 0028     		cmp	r0, #0
 563 0064 F1D0     		beq	.L43
 185:drivers/bsp_f1xx_rtc.c **** 		{
 564              		.loc 1 185 0 is_stmt 0 discriminator 1
 565 0066 012D     		cmp	r5, #1
 566 0068 EFD1     		bne	.L43
 187:drivers/bsp_f1xx_rtc.c **** 			else break;
 567              		.loc 1 187 0 is_stmt 1
 568 006a 1C2C     		cmp	r4, #28
 569 006c 01D9     		bls	.L44
 187:drivers/bsp_f1xx_rtc.c **** 			else break;
 570              		.loc 1 187 0 is_stmt 0 discriminator 1
 571 006e 1D3C     		subs	r4, r4, #29
 572              	.LVL71:
 573 0070 F0E7     		b	.L45
 574              	.L44:
 195:drivers/bsp_f1xx_rtc.c **** 	mTime.w_date = temp + 1;        //得到日期
 575              		.loc 1 195 0 is_stmt 1
 576 0072 691C     		adds	r1, r5, #1
 577 0074 C9B2     		uxtb	r1, r1
 578 0076 134D     		ldr	r5, .L48+4
 579              	.LVL72:
 580 0078 A971     		strb	r1, [r5, #6]
 196:drivers/bsp_f1xx_rtc.c **** 
 581              		.loc 1 196 0
 582 007a 621C     		adds	r2, r4, #1
 583 007c D2B2     		uxtb	r2, r2
 584 007e EA71     		strb	r2, [r5, #7]
 198:drivers/bsp_f1xx_rtc.c **** 	mTime.hour = temp / 3600;        //小时
 585              		.loc 1 198 0
 586 0080 114B     		ldr	r3, .L48+8
 587 0082 A3FB0703 		umull	r0, r3, r3, r7
 588 0086 1B0C     		lsrs	r3, r3, #16
 589 0088 1148     		ldr	r0, .L48+16
 590 008a 00FB1373 		mls	r3, r0, r3, r7
 591              	.LVL73:
 199:drivers/bsp_f1xx_rtc.c **** 	mTime.min = (temp % 3600) / 60;        //分钟
 592              		.loc 1 199 0
 593 008e 1148     		ldr	r0, .L48+20
 594 0090 A0FB0340 		umull	r4, r0, r0, r3
 595 0094 C00A     		lsrs	r0, r0, #11
 596 0096 2870     		strb	r0, [r5]
 200:drivers/bsp_f1xx_rtc.c **** 	mTime.sec = (temp % 3600) % 60;        //秒钟
 597              		.loc 1 200 0
 598 0098 4FF46164 		mov	r4, #3600
 599 009c 04FB1034 		mls	r4, r4, r0, r3
 600 00a0 0D4B     		ldr	r3, .L48+24
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 16


 601              	.LVL74:
 602 00a2 A3FB0403 		umull	r0, r3, r3, r4
 603 00a6 5B09     		lsrs	r3, r3, #5
 604 00a8 6B70     		strb	r3, [r5, #1]
 201:drivers/bsp_f1xx_rtc.c **** 	mTime.week = RTC_Get_Week(mTime.w_year, mTime.w_month, mTime.w_date);//获取星期
 605              		.loc 1 201 0
 606 00aa C3EB0313 		rsb	r3, r3, r3, lsl #4
 607 00ae 9800     		lsls	r0, r3, #2
 608 00b0 201A     		subs	r0, r4, r0
 609 00b2 A870     		strb	r0, [r5, #2]
 202:drivers/bsp_f1xx_rtc.c **** 
 610              		.loc 1 202 0
 611 00b4 3046     		mov	r0, r6
 612 00b6 FFF7FEFF 		bl	RTC_Get_Week
 613              	.LVL75:
 614 00ba 2872     		strb	r0, [r5, #8]
 205:drivers/bsp_f1xx_rtc.c **** 
 615              		.loc 1 205 0
 616 00bc 0020     		movs	r0, #0
 617 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 618              	.LVL76:
 619              	.L49:
 620              		.align	2
 621              	.L48:
 622 00c0 00280040 		.word	1073752064
 623 00c4 00000000 		.word	.LANCHOR2
 624 00c8 07452EC2 		.word	-1037155065
 625 00cc 00000000 		.word	.LANCHOR0
 626 00d0 80510100 		.word	86400
 627 00d4 C5B3A291 		.word	-1851608123
 628 00d8 89888888 		.word	-2004318071
 629              		.cfi_endproc
 630              	.LFE71:
 632              		.section	.text.bsp_RTC_Init,"ax",%progbits
 633              		.align	1
 634              		.global	bsp_RTC_Init
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu softvfp
 640              	bsp_RTC_Init:
 641              	.LFB66:
  18:drivers/bsp_f1xx_rtc.c **** 	//检查是不是第一次配置时钟
 642              		.loc 1 18 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646 0000 08B5     		push	{r3, lr}
 647              	.LCFI5:
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 651              	.LVL77:
  21:drivers/bsp_f1xx_rtc.c **** 	{
 652              		.loc 1 21 0
 653 0002 2C4B     		ldr	r3, .L60
 654 0004 5A68     		ldr	r2, [r3, #4]
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 17


 655 0006 45F25003 		movw	r3, #20560
 656 000a 9A42     		cmp	r2, r3
 657 000c 4CD0     		beq	.L51
  23:drivers/bsp_f1xx_rtc.c **** 		RCC->APB1ENR |= 1 << 27;     //使能备份时钟
 658              		.loc 1 23 0
 659 000e 2A4B     		ldr	r3, .L60+4
 660 0010 DA69     		ldr	r2, [r3, #28]
 661 0012 42F08052 		orr	r2, r2, #268435456
 662 0016 DA61     		str	r2, [r3, #28]
  24:drivers/bsp_f1xx_rtc.c **** 		PWR->CR |= 1 << 8;           //取消备份区写保护
 663              		.loc 1 24 0
 664 0018 DA69     		ldr	r2, [r3, #28]
 665 001a 42F00062 		orr	r2, r2, #134217728
 666 001e DA61     		str	r2, [r3, #28]
  25:drivers/bsp_f1xx_rtc.c **** 		RCC->BDCR |= 1 << 16;        //备份区域软复位
 667              		.loc 1 25 0
 668 0020 2649     		ldr	r1, .L60+8
 669 0022 0A68     		ldr	r2, [r1]
 670 0024 42F48072 		orr	r2, r2, #256
 671 0028 0A60     		str	r2, [r1]
  26:drivers/bsp_f1xx_rtc.c **** 		RCC->BDCR &= ~(1 << 16);     //备份区域软复位结束
 672              		.loc 1 26 0
 673 002a 1A6A     		ldr	r2, [r3, #32]
 674 002c 42F48032 		orr	r2, r2, #65536
 675 0030 1A62     		str	r2, [r3, #32]
  27:drivers/bsp_f1xx_rtc.c **** 		RCC->BDCR |= 1 << 0;         //开启外部低速振荡器
 676              		.loc 1 27 0
 677 0032 1A6A     		ldr	r2, [r3, #32]
 678 0034 22F48032 		bic	r2, r2, #65536
 679 0038 1A62     		str	r2, [r3, #32]
  28:drivers/bsp_f1xx_rtc.c **** 		while ((!(RCC->BDCR & 0X02)) && (temp < 72000000)) { temp++; }//等待外部时钟就绪
 680              		.loc 1 28 0
 681 003a 1A6A     		ldr	r2, [r3, #32]
 682 003c 42F00102 		orr	r2, r2, #1
 683 0040 1A62     		str	r2, [r3, #32]
  20:drivers/bsp_f1xx_rtc.c **** 	if (BKP->DR1 != 0X5050)//第一次配置
 684              		.loc 1 20 0
 685 0042 0023     		movs	r3, #0
 686              	.LVL78:
 687              	.L52:
  29:drivers/bsp_f1xx_rtc.c **** 		if (temp >= 72000000)return 1;//初始化时钟失败,晶振有问题
 688              		.loc 1 29 0 discriminator 1
 689 0044 1C4A     		ldr	r2, .L60+4
 690 0046 126A     		ldr	r2, [r2, #32]
 691 0048 12F0020F 		tst	r2, #2
 692 004c 04D1     		bne	.L53
  29:drivers/bsp_f1xx_rtc.c **** 		if (temp >= 72000000)return 1;//初始化时钟失败,晶振有问题
 693              		.loc 1 29 0 is_stmt 0 discriminator 2
 694 004e 1C4A     		ldr	r2, .L60+12
 695 0050 9342     		cmp	r3, r2
 696 0052 01D8     		bhi	.L53
  29:drivers/bsp_f1xx_rtc.c **** 		if (temp >= 72000000)return 1;//初始化时钟失败,晶振有问题
 697              		.loc 1 29 0 discriminator 3
 698 0054 0133     		adds	r3, r3, #1
 699              	.LVL79:
 700 0056 F5E7     		b	.L52
 701              	.L53:
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 18


  30:drivers/bsp_f1xx_rtc.c **** 		RCC->BDCR |= 1 << 8; //LSE作为RTC时钟
 702              		.loc 1 30 0 is_stmt 1
 703 0058 194A     		ldr	r2, .L60+12
 704 005a 9342     		cmp	r3, r2
 705 005c 28D8     		bhi	.L58
  31:drivers/bsp_f1xx_rtc.c **** 		RCC->BDCR |= 1 << 15;//RTC时钟使能
 706              		.loc 1 31 0
 707 005e 164B     		ldr	r3, .L60+4
 708              	.LVL80:
 709 0060 1A6A     		ldr	r2, [r3, #32]
 710 0062 42F48072 		orr	r2, r2, #256
 711 0066 1A62     		str	r2, [r3, #32]
  32:drivers/bsp_f1xx_rtc.c **** 		while (!(RTC->CRL & (1 << 5))) {}//等待RTC寄存器操作完成
 712              		.loc 1 32 0
 713 0068 1A6A     		ldr	r2, [r3, #32]
 714 006a 42F40042 		orr	r2, r2, #32768
 715 006e 1A62     		str	r2, [r3, #32]
 716              	.L56:
  33:drivers/bsp_f1xx_rtc.c **** //		while (!(RTC->CRL & (1 << 3))){}//等待RTC寄存器同步
 717              		.loc 1 33 0 discriminator 1
 718 0070 144B     		ldr	r3, .L60+16
 719 0072 5B68     		ldr	r3, [r3, #4]
 720 0074 13F0200F 		tst	r3, #32
 721 0078 FAD0     		beq	.L56
  37:drivers/bsp_f1xx_rtc.c **** 		RTC->PRLH = 0X0000;
 722              		.loc 1 37 0
 723 007a 124B     		ldr	r3, .L60+16
 724 007c 5A68     		ldr	r2, [r3, #4]
 725 007e 42F01002 		orr	r2, r2, #16
 726 0082 5A60     		str	r2, [r3, #4]
  38:drivers/bsp_f1xx_rtc.c **** 		RTC->PRLL = 32767;          //时钟周期设置(有待观察,看是否跑慢了?)理论值：327
 727              		.loc 1 38 0
 728 0084 0022     		movs	r2, #0
 729 0086 9A60     		str	r2, [r3, #8]
  39:drivers/bsp_f1xx_rtc.c **** 		RTC->CRL &= ~(1 << 4);           //配置更新
 730              		.loc 1 39 0
 731 0088 47F6FF72 		movw	r2, #32767
 732 008c DA60     		str	r2, [r3, #12]
  40:drivers/bsp_f1xx_rtc.c **** 		while (!(RTC->CRL & (1 << 5)));   //等待RTC寄存器操作完成
 733              		.loc 1 40 0
 734 008e 5A68     		ldr	r2, [r3, #4]
 735 0090 22F01002 		bic	r2, r2, #16
 736 0094 5A60     		str	r2, [r3, #4]
 737              	.L57:
  41:drivers/bsp_f1xx_rtc.c **** 		BKP->DR1 = 0X5050;
 738              		.loc 1 41 0 discriminator 1
 739 0096 0B4B     		ldr	r3, .L60+16
 740 0098 5B68     		ldr	r3, [r3, #4]
 741 009a 13F0200F 		tst	r3, #32
 742 009e FAD0     		beq	.L57
  42:drivers/bsp_f1xx_rtc.c **** 	}
 743              		.loc 1 42 0
 744 00a0 044B     		ldr	r3, .L60
 745 00a2 45F25002 		movw	r2, #20560
 746 00a6 5A60     		str	r2, [r3, #4]
 747              	.L51:
  52:drivers/bsp_f1xx_rtc.c **** 
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 19


 748              		.loc 1 52 0
 749 00a8 FFF7FEFF 		bl	RTC_Get
 750              	.LVL81:
  54:drivers/bsp_f1xx_rtc.c **** }
 751              		.loc 1 54 0
 752 00ac 0020     		movs	r0, #0
 753              	.L55:
  55:drivers/bsp_f1xx_rtc.c **** 
 754              		.loc 1 55 0
 755 00ae 08BD     		pop	{r3, pc}
 756              	.LVL82:
 757              	.L58:
  30:drivers/bsp_f1xx_rtc.c **** 		RCC->BDCR |= 1 << 8; //LSE作为RTC时钟
 758              		.loc 1 30 0
 759 00b0 0120     		movs	r0, #1
 760 00b2 FCE7     		b	.L55
 761              	.L61:
 762              		.align	2
 763              	.L60:
 764 00b4 006C0040 		.word	1073769472
 765 00b8 00100240 		.word	1073876992
 766 00bc 00700040 		.word	1073770496
 767 00c0 FFA14A04 		.word	71999999
 768 00c4 00280040 		.word	1073752064
 769              		.cfi_endproc
 770              	.LFE66:
 772              		.section	.text.RTC_IRQHandler,"ax",%progbits
 773              		.align	1
 774              		.global	RTC_IRQHandler
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu softvfp
 780              	RTC_IRQHandler:
 781              	.LFB67:
  60:drivers/bsp_f1xx_rtc.c **** 	if (RTC->CRL & 0x0001)//秒钟中断
 782              		.loc 1 60 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786 0000 08B5     		push	{r3, lr}
 787              	.LCFI6:
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 3, -8
 790              		.cfi_offset 14, -4
  61:drivers/bsp_f1xx_rtc.c **** 	{
 791              		.loc 1 61 0
 792 0002 0D4B     		ldr	r3, .L67
 793 0004 5B68     		ldr	r3, [r3, #4]
 794 0006 13F0010F 		tst	r3, #1
 795 000a 11D1     		bne	.L66
 796              	.L63:
  65:drivers/bsp_f1xx_rtc.c **** 	{
 797              		.loc 1 65 0
 798 000c 0A4B     		ldr	r3, .L67
 799 000e 5B68     		ldr	r3, [r3, #4]
 800 0010 13F0020F 		tst	r3, #2
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 20


 801 0014 04D0     		beq	.L64
  67:drivers/bsp_f1xx_rtc.c **** 		//printf("Alarm!\n");
 802              		.loc 1 67 0
 803 0016 084A     		ldr	r2, .L67
 804 0018 5368     		ldr	r3, [r2, #4]
 805 001a 23F00203 		bic	r3, r3, #2
 806 001e 5360     		str	r3, [r2, #4]
 807              	.L64:
  70:drivers/bsp_f1xx_rtc.c **** //	while (!(RTC->CRL & (1 << 5)));//等待RTC寄存器操作完成
 808              		.loc 1 70 0
 809 0020 054A     		ldr	r2, .L67
 810 0022 5368     		ldr	r3, [r2, #4]
 811 0024 23F00503 		bic	r3, r3, #5
 812 0028 1B05     		lsls	r3, r3, #20
 813 002a 1B0D     		lsrs	r3, r3, #20
 814 002c 5360     		str	r3, [r2, #4]
  72:drivers/bsp_f1xx_rtc.c **** 
 815              		.loc 1 72 0
 816 002e 08BD     		pop	{r3, pc}
 817              	.L66:
  63:drivers/bsp_f1xx_rtc.c **** 	}
 818              		.loc 1 63 0
 819 0030 FFF7FEFF 		bl	RTC_Get
 820              	.LVL83:
 821 0034 EAE7     		b	.L63
 822              	.L68:
 823 0036 00BF     		.align	2
 824              	.L67:
 825 0038 00280040 		.word	1073752064
 826              		.cfi_endproc
 827              	.LFE67:
 829              		.global	mon_table
 830              		.global	table_week
 831              		.global	mTime
 832              		.section	.data.mTime,"aw",%progbits
 833              		.align	2
 834              		.set	.LANCHOR2,. + 0
 837              	mTime:
 838 0000 0E       		.byte	14
 839 0001 23       		.byte	35
 840 0002 32       		.byte	50
 841 0003 00       		.space	1
 842 0004 E307     		.short	2019
 843 0006 0C       		.byte	12
 844 0007 09       		.byte	9
 845 0008 00000000 		.space	8
 845      00000000 
 846              		.section	.rodata.mon_table,"a",%progbits
 847              		.align	2
 848              		.set	.LANCHOR0,. + 0
 851              	mon_table:
 852 0000 1F       		.byte	31
 853 0001 1C       		.byte	28
 854 0002 1F       		.byte	31
 855 0003 1E       		.byte	30
 856 0004 1F       		.byte	31
 857 0005 1E       		.byte	30
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 21


 858 0006 1F       		.byte	31
 859 0007 1F       		.byte	31
 860 0008 1E       		.byte	30
 861 0009 1F       		.byte	31
 862 000a 1E       		.byte	30
 863 000b 1F       		.byte	31
 864              		.section	.rodata.table_week,"a",%progbits
 865              		.align	2
 866              		.set	.LANCHOR1,. + 0
 869              	table_week:
 870 0000 00       		.byte	0
 871 0001 03       		.byte	3
 872 0002 03       		.byte	3
 873 0003 06       		.byte	6
 874 0004 01       		.byte	1
 875 0005 04       		.byte	4
 876 0006 06       		.byte	6
 877 0007 02       		.byte	2
 878 0008 05       		.byte	5
 879 0009 00       		.byte	0
 880 000a 03       		.byte	3
 881 000b 05       		.byte	5
 882              		.text
 883              	.Letext0:
 884              		.file 2 "/Users/zy/Desktop/Tools/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_
 885              		.file 3 "/Users/zy/Desktop/Tools/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdi
 886              		.file 4 "Inc/stm32f103xe.h"
 887              		.file 5 "/Users/zy/Desktop/Tools/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/lock.
 888              		.file 6 "/Users/zy/Desktop/Tools/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_type
 889              		.file 7 "/Users/zy/Desktop/Tools/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/inc
 890              		.file 8 "/Users/zy/Desktop/Tools/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/reent
 891              		.file 9 "Inc/core_cm3.h"
 892              		.file 10 "startup/inc/sys.h"
 893              		.file 11 "tools/inc/malloc.h"
 894              		.file 12 "tools/inc/tskmanager.h"
 895              		.file 13 "drivers/inc/bsp_f1xx_rtc.h"
ARM GAS  /var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bsp_f1xx_rtc.c
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:16     .text.Is_Leap_Year:0000000000000000 $t
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:23     .text.Is_Leap_Year:0000000000000000 Is_Leap_Year
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:75     .text.Is_Leap_Year:000000000000003c $d
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:80     .text.RTC_Set:0000000000000000 $t
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:87     .text.RTC_Set:0000000000000000 RTC_Set
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:269    .text.RTC_Set:00000000000000fc $d
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:278    .text.RtcSetBySec:0000000000000000 $t
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:285    .text.RtcSetBySec:0000000000000000 RtcSetBySec
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:345    .text.RtcSetBySec:0000000000000050 $d
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:352    .text.RTC_Get_Week:0000000000000000 $t
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:359    .text.RTC_Get_Week:0000000000000000 RTC_Get_Week
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:451    .text.RTC_Get_Week:000000000000006c $d
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:458    .text.RTC_Get:0000000000000000 $t
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:465    .text.RTC_Get:0000000000000000 RTC_Get
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:622    .text.RTC_Get:00000000000000c0 $d
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:633    .text.bsp_RTC_Init:0000000000000000 $t
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:640    .text.bsp_RTC_Init:0000000000000000 bsp_RTC_Init
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:764    .text.bsp_RTC_Init:00000000000000b4 $d
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:773    .text.RTC_IRQHandler:0000000000000000 $t
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:780    .text.RTC_IRQHandler:0000000000000000 RTC_IRQHandler
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:825    .text.RTC_IRQHandler:0000000000000038 $d
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:851    .rodata.mon_table:0000000000000000 mon_table
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:869    .rodata.table_week:0000000000000000 table_week
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:837    .data.mTime:0000000000000000 mTime
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:833    .data.mTime:0000000000000000 $d
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:847    .rodata.mon_table:0000000000000000 $d
/var/folders/vc/p32jbmgs3k17njj5gy_2_k3w0000gn/T//ccT2UcBU.s:865    .rodata.table_week:0000000000000000 $d

UNDEFINED SYMBOLS
INTX_DISABLE
INTX_ENABLE
